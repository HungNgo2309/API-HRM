// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240703133001_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("api.Models.LeaveApplication", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Above")
                        .HasColumnType("bit");

                    b.Property<int?>("AccepterID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Reject_Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int?>("SuperiorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ReasonCategoryID");

                    b.HasIndex("StaffID");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("api.Models.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("api.Models.ReasonCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ResonCategorys");
                });

            modelBuilder.Entity("api.Models.Staff", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<int?>("PositionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("PositionID");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("api.Models.StaffRelate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_Staff")
                        .HasColumnType("int");

                    b.Property<int?>("LeaveApplicationID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LeaveApplicationID");

                    b.ToTable("StaffRelates");
                });

            modelBuilder.Entity("api.Models.LeaveApplication", b =>
                {
                    b.HasOne("api.Models.ReasonCategory", "ReasonCategory")
                        .WithMany()
                        .HasForeignKey("ReasonCategoryID");

                    b.HasOne("api.Models.Staff", "Staff")
                        .WithMany("Staffs")
                        .HasForeignKey("StaffID");

                    b.Navigation("ReasonCategory");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("api.Models.Staff", b =>
                {
                    b.HasOne("api.Models.Department", "Department")
                        .WithMany("Staffs")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("api.Models.Position", "Position")
                        .WithMany("Staffs")
                        .HasForeignKey("PositionID");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("api.Models.StaffRelate", b =>
                {
                    b.HasOne("api.Models.LeaveApplication", "LeaveApplication")
                        .WithMany("StaffRelates")
                        .HasForeignKey("LeaveApplicationID");

                    b.Navigation("LeaveApplication");
                });

            modelBuilder.Entity("api.Models.Department", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("api.Models.LeaveApplication", b =>
                {
                    b.Navigation("StaffRelates");
                });

            modelBuilder.Entity("api.Models.Position", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("api.Models.Staff", b =>
                {
                    b.Navigation("Staffs");
                });
#pragma warning restore 612, 618
        }
    }
}
